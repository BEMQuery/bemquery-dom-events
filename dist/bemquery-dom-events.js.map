{"version":3,"file":null,"sources":["../src/ListenersStorage.js","../src/listeners.js","../src/index.js"],"sourcesContent":["'use strict';\n\n/** Storage for events listeners */\nclass ListenersStorage {\n\t/**\n\t * Creates new storage for event lsiteners\n\t *\n\t * @class\n\t */\n\tconstructor() {\n\t\tthis.storage = new WeakMap();\n\t}\n\n\t/**\n\t * Adds event listener to the storage.\n\t *\n\t * @param {Object} element Element to which listener is binded.\n\t * @param {String} type Type of event.\n\t * @param {String} selector Selector for event delegation.\n\t * @param {Function} fn Original callback.\n\t * @param {Function} listener Created listener.\n\t * @return {void}\n\t */\n\tadd( element, type, selector, fn, listener ) {\n\t\tlet listeners = {};\n\n\t\tif ( this.storage.has( element ) ) {\n\t\t\tlisteners = this.storage.get( element );\n\t\t}\n\n\t\tif ( typeof listeners[ type ] === 'undefined' ) {\n\t\t\tlisteners[ type ] = {};\n\t\t}\n\n\t\tif ( typeof listeners[ type ][ selector ] === 'undefined' ) {\n\t\t\tlisteners[ type ][ selector ] = [];\n\t\t}\n\n\t\tlisteners[ type ][ selector ].push( [ fn, listener ] );\n\n\t\tthis.storage.set( element, listeners );\n\t}\n\n\t/**\n\t * Gets event listener that matches the given criteria.\n\t *\n\t * @param {Object} element Element to which listener is binded.\n\t * @param {String} type Type of event.\n\t * @param {String} selector Selector for event delegation.\n\t * @param {Function} fn Original callback.\n\t * @return {Function} Event listener.\n\t */\n\tget( element, type, selector, fn ) {\n\t\tif ( !this.storage.has( element ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst listeners = this.storage.get( element );\n\n\t\tif ( typeof listeners[ type ] === 'undefined' || typeof listeners[ type ][ selector ] === 'undefined' ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tfor ( let pair of listeners[ type ][ selector ] ) { // eslint-disable-line prefer-const\n\t\t\tif ( pair[ 0 ] === fn ) {\n\t\t\t\treturn pair[ 1 ];\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Removes event listener that matches the given criteria.\n\t *\n\t * @param {Object} element Element to which listener is binded.\n\t * @param {String} type Type of event.\n\t * @param {String} selector Selector for event delegation.\n\t * @param {Function} fn Original callback.\n\t * @return {Function} Event listener.\n\t */\n\tremove( element, type, selector, fn ) {\n\t\tif ( !this.storage.has( element ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst listeners = this.storage.get( element );\n\n\t\tif ( typeof listeners[ type ] === 'undefined' || typeof listeners[ type ][ selector ] === 'undefined' ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlisteners[ type ][ selector ].forEach( ( pair, i ) => {\n\t\t\tif ( pair[ 0 ] === fn ) {\n\t\t\t\tlisteners[ type ][ selector ].splice( i, 1 );\n\t\t\t}\n\t\t} );\n\n\t\treturn null;\n\t}\n}\n\nexport default ListenersStorage;\n","'use strict';\n\nimport { BEMQuery as BEMQuery } from 'bemquery-core';\nimport ListenersStorage from './ListenersStorage';\n\nconst storage = new ListenersStorage();\n\n/**\n * Method for adding event listener to the element.\n *\n * @param {String} type Type of the event.\n * @param {String|Function} selector If that parameter is a string,\n * then it's used to construct checking for the event delegation.\n * However if function is passed, then it becomes the event's listener.\n * @param {Function} callback If the second parameter is a string, this\n * function will be used as an event's listener.\n * @return {BEMQuery} Current BEMQuery instance.\n * @memberof BEMQuery\n */\nBEMQuery.prototype.on = function( type, selector, callback ) {\n\tlet listener;\n\n\tif ( typeof type !== 'string' || !type ) {\n\t\tthrow new TypeError( 'Type of event must be a non-empty string.' );\n\t}\n\n\tif ( ( typeof selector !== 'string' && typeof selector !== 'function' ) || !selector ) {\n\t\tthrow new TypeError( 'Selector must be a non-empty string or function.' );\n\t}\n\n\tif ( typeof selector === 'string' ) {\n\t\tif ( typeof callback !== 'function' ) {\n\t\t\tthrow new TypeError( 'Callback must be a function.' );\n\t\t}\n\n\t\tselector = this.converter.convert( selector ).CSS;\n\t\tselector = `${selector}, ${selector} *`;\n\n\t\tlistener = ( evt ) => {\n\t\t\tif ( evt.target.matches( selector ) ) {\n\t\t\t\tcallback( evt );\n\t\t\t}\n\t\t};\n\t} else {\n\t\tlistener = selector;\n\t}\n\n\tthis.elements.forEach( ( element ) => {\n\t\telement.addEventListener( type, listener, false );\n\n\t\tif ( typeof selector === 'string' ) {\n\t\t\tstorage.add( element, type, selector, callback, listener );\n\t\t}\n\t} );\n\n\treturn this;\n};\n\n/**\n * Method for removing event listener from the element.\n *\n * @param {String} type Type of the event.\n * @param {String|Function} selector If that parameter is a string,\n * then it's used to construct checking for the event delegation.\n * However if function is passed, then it becomes the event's listener.\n * @param {Function} callback If the second parameter is a string, this\n * function will be used as an event's listener.\n * @return {BEMQuery} Current BEMQuery instance.\n * @memberof BEMQuery\n */\nBEMQuery.prototype.off = function( type, selector, callback ) {\n\tlet listener;\n\n\tif ( typeof type !== 'string' || !type ) {\n\t\tthrow new TypeError( 'Type of event must be a non-empty string.' );\n\t}\n\n\tif ( ( typeof selector !== 'string' && typeof selector !== 'function' ) || !selector ) {\n\t\tthrow new TypeError( 'Selector must be a non-empty string or function.' );\n\t}\n\n\tif ( typeof selector === 'string' ) {\n\t\tif ( typeof callback !== 'function' ) {\n\t\t\tthrow new TypeError( 'Callback must be a function.' );\n\t\t}\n\n\t\tselector = this.converter.convert( selector ).CSS;\n\t\tselector = `${selector}, ${selector} *`;\n\t} else {\n\t\tlistener = selector;\n\t}\n\n\tthis.elements.forEach( ( element ) => {\n\t\tif ( typeof selector === 'string' ) {\n\t\t\tlistener = storage.get( element, type, selector, callback );\n\n\t\t\tstorage.remove( element, type, selector, callback );\n\t\t}\n\t\telement.removeEventListener( type, listener, false );\n\t} );\n\n\treturn this;\n};\n","'use strict';\n\n/** @class BEMQuery */\nimport './listeners';\n"],"names":[],"mappings":"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"}