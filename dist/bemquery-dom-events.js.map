{"version":3,"file":"bemquery-dom-events.js","sources":["../src/ListenersStorage.js","../src/listeners.js"],"sourcesContent":["'use strict';\n\n/** Storage for events listeners */\nclass ListenersStorage {\n\t/**\n\t * Creates new storage for event lsiteners\n\t *\n\t * @class\n\t */\n\tconstructor() {\n\t\tthis.storage = new WeakMap();\n\t}\n\n\t/**\n\t * Adds event listener to the storage.\n\t *\n\t * @param {Object} element Element to which listener is binded.\n\t * @param {String} type Type of event.\n\t * @param {String} selector Selector for event delegation.\n\t * @param {Function} fn Original callback.\n\t * @param {Function} listener Created listener.\n\t * @return {void}\n\t */\n\tadd( element, type, selector, fn, listener ) {\n\t\tlet listeners = {};\n\n\t\tif ( this.storage.has( element ) ) {\n\t\t\tlisteners = this.storage.get( element );\n\t\t}\n\n\t\tif ( typeof listeners[ type ] === 'undefined' ) {\n\t\t\tlisteners[ type ] = {};\n\t\t}\n\n\t\tif ( typeof listeners[ type ][ selector ] === 'undefined' ) {\n\t\t\tlisteners[ type ][ selector ] = [];\n\t\t}\n\n\t\tlisteners[ type ][ selector ].push( [ fn, listener ] );\n\n\t\tthis.storage.set( element, listeners );\n\t}\n\n\t/**\n\t * Gets event listener that matches the given criteria.\n\t *\n\t * @param {Object} element Element to which listener is binded.\n\t * @param {String} type Type of event.\n\t * @param {String} selector Selector for event delegation.\n\t * @param {Function} fn Original callback.\n\t * @return {Function} Event listener.\n\t */\n\tget( element, type, selector, fn ) {\n\t\tif ( !this.storage.has( element ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst listeners = this.storage.get( element );\n\n\t\tif ( typeof listeners[ type ] === 'undefined' || typeof listeners[ type ][ selector ] === 'undefined' ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tfor ( let pair of listeners[ type ][ selector ] ) { // eslint-disable-line prefer-const\n\t\t\tif ( pair[ 0 ] === fn ) {\n\t\t\t\treturn pair[ 1 ];\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Removes event listener that matches the given criteria.\n\t *\n\t * @param {Object} element Element to which listener is binded.\n\t * @param {String} type Type of event.\n\t * @param {String} selector Selector for event delegation.\n\t * @param {Function} fn Original callback.\n\t * @return {Function} Event listener.\n\t */\n\tremove( element, type, selector, fn ) {\n\t\tif ( !this.storage.has( element ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst listeners = this.storage.get( element );\n\n\t\tif ( typeof listeners[ type ] === 'undefined' || typeof listeners[ type ][ selector ] === 'undefined' ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlisteners[ type ][ selector ].forEach( ( pair, i ) => {\n\t\t\tif ( pair[ 0 ] === fn ) {\n\t\t\t\tlisteners[ type ][ selector ].splice( i, 1 );\n\t\t\t}\n\t\t} );\n\n\t\treturn null;\n\t}\n}\n\nexport default ListenersStorage;\n","'use strict';\n\nimport { BEMQuery as BEMQuery } from 'bemquery-core';\nimport ListenersStorage from './ListenersStorage';\n\nconst storage = new ListenersStorage();\n\n/**\n * Method for adding event listener to the element.\n *\n * @param {String} type Type of the event.\n * @param {String|Function} selector If that parameter is a string,\n * then it's used to construct checking for the event delegation.\n * However if function is passed, then it becomes the event's listener.\n * @param {Function} callback If the second parameter is a string, this\n * function will be used as an event's listener.\n * @return {BEMQuery} Current BEMQuery instance.\n * @memberof BEMQuery\n */\nBEMQuery.prototype.on = function( type, selector, callback ) {\n\tlet listener;\n\n\tif ( typeof type !== 'string' || !type ) {\n\t\tthrow new TypeError( 'Type of event must be a non-empty string.' );\n\t}\n\n\tif ( ( typeof selector !== 'string' && typeof selector !== 'function' ) || !selector ) {\n\t\tthrow new TypeError( 'Selector must be a non-empty string or function.' );\n\t}\n\n\tif ( typeof selector === 'string' ) {\n\t\tif ( typeof callback !== 'function' ) {\n\t\t\tthrow new TypeError( 'Callback must be a function.' );\n\t\t}\n\n\t\tselector = this.converter.convert( selector ).CSS;\n\t\tselector = `${selector}, ${selector} *`;\n\n\t\tlistener = ( evt ) => {\n\t\t\tif ( evt.target.matches( selector ) ) {\n\t\t\t\tcallback( evt );\n\t\t\t}\n\t\t};\n\t} else {\n\t\tlistener = selector;\n\t}\n\n\tthis.elements.forEach( ( element ) => {\n\t\telement.addEventListener( type, listener, false );\n\n\t\tif ( typeof selector === 'string' ) {\n\t\t\tstorage.add( element, type, selector, callback, listener );\n\t\t}\n\t} );\n\n\treturn this;\n};\n\n/**\n * Method for removing event listener from the element.\n *\n * @param {String} type Type of the event.\n * @param {String|Function} selector If that parameter is a string,\n * then it's used to construct checking for the event delegation.\n * However if function is passed, then it becomes the event's listener.\n * @param {Function} callback If the second parameter is a string, this\n * function will be used as an event's listener.\n * @return {BEMQuery} Current BEMQuery instance.\n * @memberof BEMQuery\n */\nBEMQuery.prototype.off = function( type, selector, callback ) {\n\tlet listener;\n\n\tif ( typeof type !== 'string' || !type ) {\n\t\tthrow new TypeError( 'Type of event must be a non-empty string.' );\n\t}\n\n\tif ( ( typeof selector !== 'string' && typeof selector !== 'function' ) || !selector ) {\n\t\tthrow new TypeError( 'Selector must be a non-empty string or function.' );\n\t}\n\n\tif ( typeof selector === 'string' ) {\n\t\tif ( typeof callback !== 'function' ) {\n\t\t\tthrow new TypeError( 'Callback must be a function.' );\n\t\t}\n\n\t\tselector = this.converter.convert( selector ).CSS;\n\t\tselector = `${selector}, ${selector} *`;\n\t} else {\n\t\tlistener = selector;\n\t}\n\n\tthis.elements.forEach( ( element ) => {\n\t\tif ( typeof selector === 'string' ) {\n\t\t\tlistener = storage.get( element, type, selector, callback );\n\n\t\t\tstorage.remove( element, type, selector, callback );\n\t\t}\n\t\telement.removeEventListener( type, listener, false );\n\t} );\n\n\treturn this;\n};\n"],"names":["ListenersStorage","constructor","storage","WeakMap","add","element","type","selector","fn","listener","listeners","has","get","push","set","pair","remove","forEach","i","splice","BEMQuery","prototype","on","callback","TypeError","converter","convert","CSS","evt","target","matches","elements","addEventListener","off","removeEventListener"],"mappings":"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"}